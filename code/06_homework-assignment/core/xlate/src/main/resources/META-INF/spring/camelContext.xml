<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:camel="http://camel.apache.org/schema/spring" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:osgi="http://www.springframework.org/schema/osgi"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
  http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd">

  <bean id="serviceStrategy"
    class="org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy">
    <constructor-arg value="com.sun.mdm.index.webservice.PersonEJB" />
    <constructor-arg value="true" />
  </bean>

  <!-- This reference just lets all of our routes use the same
  connection pool set up in the mq-service project-->
  <osgi:reference id="activemqService" interface="org.apache.camel.Component" />

  <camelContext id="xlatePerson" xmlns="http://camel.apache.org/schema/spring" trace="false" typeConverterStatisticsEnabled="true">

    <dataFormats>
      <soapjaxb contextPath="com.sun.mdm.index.webservice" id="nextgateFormat" elementNameStrategyRef="serviceStrategy" />
      <jaxb id="personFormat" contextPath="com.customer.app" partClass="com.customer.app.Person" />
    </dataFormats>

    <route id="translate">
      <!-- Normally queue values are set as dynamic properties
      so we can change them without rebuilding the code -->
      <from uri="activemqService:queue:customer" />
        <unmarshal ref="personFormat" />
        <convertBodyTo type="com.sun.mdm.index.webservice.ExecuteMatchUpdate" />
        <log message="Converted body: ${body}" />
        <marshal ref="nextgateFormat" />
      <!-- Notice in the inbound route we just used the InOut component
      here we used a pattern on the to component, they both work -->
      <to uri="activemqService:queue:nextgate" pattern="InOut"/>
    </route>

  </camelContext>

</beans>
